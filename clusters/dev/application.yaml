apiVersion: v1
kind: Namespace
metadata: { name: platform-system }
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata: { name: ingress-nginx, namespace: argocd }
spec:
  project: default
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 4.10.0
    helm:
      values: |
        controller:
          service:
            type: NodePort
            nodePorts:
              http: 30080
              https: 30443
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ CreateNamespace=true ]
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata: { name: argo-rollouts, namespace: argocd }
spec:
  project: default
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-rollouts
    targetRevision: 2.37.3
  destination:
    server: https://kubernetes.default.svc
    namespace: argo-rollouts
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ CreateNamespace=true ]
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata: { name: external-secrets, namespace: argocd }
spec:
  project: default
  source:
    repoURL: https://charts.external-secrets.io
    chart: external-secrets
    targetRevision: 0.9.13
  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: [ CreateNamespace=true ]
---
# Enable these two ONLY on EKS (commented out for kind)
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata: { name: cert-manager, namespace: argocd }
# spec:
#   project: default
#   source:
#     repoURL: https://charts.jetstack.io
#     chart: cert-manager
#     targetRevision: v1.14.4
#     helm:
#       values: |
#         installCRDs: true
#   destination:
#     server: https://kubernetes.default.svc
#     namespace: cert-manager
#   syncPolicy:
#     automated: { prune: true, selfHeal: true }
#     syncOptions: [ CreateNamespace=true ]
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata: { name: external-dns, namespace: argocd }
# spec:
#   project: default
#   source:
#     repoURL: https://kubernetes-sigs.github.io/external-dns/
#     chart: external-dns
#     targetRevision: 1.15.0
#     helm:
#       values: |
#         provider: aws
#         policy: upsert-only
#         txtOwnerId: kubernettes-idp
#         domainFilters: [ "YOURDOMAIN.com" ]
#         serviceAccount:
#           annotations:
#             eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/external-dns
#   destination:
#     server: https://kubernetes.default.svc
#     namespace: external-dns
#   syncPolicy:
#     automated: { prune: true, selfHeal: true }
#     syncOptions: [ CreateNamespace=true ]
